<html window-icon="images/rx.ico" window-frame="extended" window-resizable>
<head>
<title>RenegadeX-Launcher</title>
<style>
  @import url(elements.css);
  @import url(containers.css);
  @import url(fonts.css);
  @import url(news.css);
  @import url(chat.css);
</style>
<script src="events.js" type="text/javascript"></script>
<script src="functional.js" type="text/javascript"></script>
<script type="module">
  import { Menu } from "menu.js";

  class App extends Element {


    
    constructor() {
      super();
      this.servers = [];
      Window.this.xcall("get_servers", getServersCallback);
    }

    render(props) {
      return <body model="Data">
  <div id="header" style="background-color: #0D1721; margin-top: 2px;">
    <div class="headerSpacer left">
      <a class="facebook" href="https://www.facebook.com/RenXFirestorm/" target="@system"></a>
      <a class="twitter" href="https://twitter.com/renxgame" target="@system"></a>
      <a class="discord" href="https://ren-x.com/discord" target="@system"></a>
      <a class="youtube" href="https://www.youtube.com/channel/UCaiic-yEcwEv8VG6wRaHcDQ" target="@system"></a>
    </div>
    <div class="spacer" role="window-caption"></div>
    <Menu />
    <div class="spacer" role="window-caption"></div>
    <div class="headerSpacer right">
      <button class="minimize" role="window-minimize"></button>
      <button class="maximize" role="window-maximize"></button>
      <button class="close" role="window-close"></button>
    </div>
  </div>

  <div id="overlay"></div>
  <div id="content"></div>
</body>
    }
  }

  document.body.patch(<App/>);
</script>
<script type="text/javascript">
  var sciter, sys, debug, servers;
  
  (async () => {
    sciter = await import("@sciter");
    sys = await import("@sys");
    debug = await import("@debug");
    servers = await import("servers");
  
    debug.setUnhandledExeceptionHandler(function(err) {
      try {
        console.error("setUnhandledExceptionHandler:");
        console.error(printf("Caught exception: %s\n%V", err, err.stacktrace));;
      } catch(e) {
        console.error("setUnhandledExceptionHandler:");
        console.error(printf("Caught exception: %s\n%V", e, e.stacktrace));;
      }
    });
  
    Element.prototype.load = function(file, base_url = undefined) {
      try {
        console.log("Called prototype load!");
        if(base_url != undefined) {
          console.log("Loading HTML into element:");
          console.log(this);
          this.content(file);
          return true;
        } else {
          console.log("Loading file \"" + file + "\" into element:");
          console.log(this);
          this.content(sciter.decode(sys.fs.$readfile("dom/" + file)));
          if(this.$("div.servers.placeholder")) {
            let ServerList = servers.ServerList;
            this.$("div.servers.placeholder").patch(<ServerList servers={server_list} />);
          }
          return true;
        }
      } catch(e) {
        console.error("Element.load:");
        console.error(printf("Caught exception: %s\n%V", e, e.stacktrace));;
      }
    };
    try {
      document.$("#content").load(document.$("div.current").getAttribute("page"));
      set_current_page(document.$("div.current"));
      Window.this.xcall("check_launcher_update", check_launcher_result);
      initialize_variables();
      Window.this.xcall("get_servers", getServersCallback);
      load_news_feed();
    } catch(e) {
      console.error("index.htm");
      console.error(printf("Caught exception: %s\n%V", e, e.stacktrace));;
    }
  })();
  
  </script>
</head>
<body />
</html>

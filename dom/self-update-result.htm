<html window-icon="images/rx.ico" window-frame="solid">
  <head>
    <title>Renegade X Launcher - Welcome Back Commander!</title>
    <style>
      @import url(elements.css);
      @import url(containers.css);
      @import url(fonts.css);

      html, body, div {
        margin: 0 0 !important;
        padding: 0 0 !important;
      }
    </style>
    <script type="text/tiscript">
      function self.ready() {
        var result = $(p.result);
        switch(view.get_return_code()) {
          case "Success":
            result.text = "Launcher updated succesfully!";
            $(button).attributes.addClass("green");
            $(button).attributes.removeClass("orange");
            break;
          case "InvalidArguments":
            result.text = "Launcher update failed: Invalid Arguments!";
            break;
          case "KillFailure":
            result.text = "Launcher update failed: Failed to terminate previous launcher!";
            break;
          case "DeletePermissionFailure":
            result.text = "Launcher update failed: Not enough permissions to delete!";
            break;
          case "MovePermissionFailure":
            result.text = "Launcher update failed: Not enough permissions to move!";
            break;
          case "DirectoryMissingFailure":
            result.text = "Launcher update failed: Missing directory!";
            break;
          case "UnhandledException":
            result.text = "Launcher update failed: Unhandled Exception!";
            break;
          case "UnknownError":
            result.text = "Launcher update failed: Unknown Error!";
            break;
          default:
            result.text = "Launcher update result unknown: " + view.get_return_code() + ".";
        }
        view.update();

        var (sx,sy,sw,sh) = View.screenBox(0,#workarea,#rectw);
        var (w,h) = $(div.username-window).box(#dimension, #margin);
        view.move( sx + (sw - w) / 2, sy + (sh - h) / 2,w,h,false);
      }

      self.on("click","[onclick]",function(evt) {
        stdout.println("onclick");
        return eval.call(this, this.attributes["onclick"] );
      });
    </script>
  </head>
  <body>
    <div.username-window role="window-caption">
      <div.titlebar>
        <h3.title.center.uppercase style="width: *;">Launcher update result</h3>
      </div>
      <div.child-margin.vflow>
        <p.result></p>
        <button.orange onclick="view.close();">Affirmative!</button>
      </div>
    </div>
  </body>
</html>
